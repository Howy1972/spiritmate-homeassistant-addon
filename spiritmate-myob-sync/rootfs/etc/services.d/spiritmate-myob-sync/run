#!/usr/bin/with-contenv bashio
# ==============================================================================
# SpiritMate MYOB Sync - service runner
# ==============================================================================

# Read configuration from add-on options (simplified)
IMAP_HOST=$(bashio::config 'imap_host')
IMAP_PORT=$(bashio::config 'imap_port')
IMAP_USER=$(bashio::config 'imap_user')
IMAP_PASS=$(bashio::config 'imap_pass')
IMAP_MAILBOX=$(bashio::config 'imap_mailbox')

FROM_EXACT=$(bashio::config 'from_exact')
SUBJECT_PREFIX=$(bashio::config 'subject_prefix')
LABEL_PROCESSED=$(bashio::config 'label_processed')

FIRESTORE_PROJECT_ID=$(bashio::config 'firestore_project_id')
LOG_LEVEL=$(bashio::config 'log_level')
LOOP_INTERVAL_OPT=$(bashio::config 'loop_interval')

# No user-configurable timezone; cron runs every minute so TZ is irrelevant

# Validate required configuration
if bashio::var.is_empty "${IMAP_HOST}" || \
   bashio::var.is_empty "${IMAP_PORT}" || \
   bashio::var.is_empty "${IMAP_USER}" || \
   bashio::var.is_empty "${IMAP_PASS}" || \
   bashio::var.is_empty "${FROM_EXACT}" || \
   bashio::var.is_empty "${SUBJECT_PREFIX}"; then
  bashio::log.error "Missing required IMAP/email settings. Please configure imap_* and email filters."
  exit 1
fi

# Export basic env vars for worker
export IMAP_HOST IMAP_PORT IMAP_USER IMAP_PASS IMAP_MAILBOX
export FROM_EXACT SUBJECT_PREFIX LABEL_PROCESSED
export FIRESTORE_PROJECT_ID LOG_LEVEL
unset SCHEDULE_ENABLED SCHEDULE_CRON SCHEDULE_START_TIME SCHEDULE_END_TIME SCHEDULE_INTERVAL TIMEZONE TZ

# Check Firestore credentials (wait for upload if missing)
if [[ ! -f "/share/spiritmate/service-account.json" ]]; then
  bashio::log.warning "Firebase service account not found at /share/spiritmate/service-account.json"
  bashio::log.warning "Open Web UI and upload service-account.json; waiting..."
  while [[ ! -f "/share/spiritmate/service-account.json" ]]; do
    sleep 5
  done
  bashio::log.info "service-account.json detected. Continuing startup..."
fi

# Copy credentials where Node can read them
cp /share/spiritmate/service-account.json /app/service-account.json

# NOW set the credentials path (after server is already running)
GOOGLE_APPLICATION_CREDENTIALS=/app/service-account.json

# Export credentials env var (other vars already exported above)
export GOOGLE_APPLICATION_CREDENTIALS

bashio::log.info "Starting MYOB sync worker"
bashio::log.info "IMAP: ${IMAP_USER}@${IMAP_HOST}:${IMAP_PORT}/${IMAP_MAILBOX:=INBOX}"
bashio::log.info "Schedule: every 1 minute (fixed)"
PORT=8099 node /app/dist/server.js &
  
  # Deterministic loop: run worker every 60 seconds (no cron)
  LOOP_INTERVAL=${LOOP_INTERVAL_OPT:-${LOOP_INTERVAL:-60}}
  bashio::log.info "Starting worker loop every ${LOOP_INTERVAL}s (no cron)..."
  while true; do
    echo "===========================================" >> /tmp/cron.log
    echo "$(date '+%Y-%m-%d %H:%M:%S %Z') - Loop STARTED" >> /tmp/cron.log
    echo "Current time: $(date)" >> /tmp/cron.log
    echo "About to run sync worker..." >> /tmp/cron.log
    cd /app && node dist/index.js >> /tmp/cron.log 2>&1
    EXIT_CODE=$?
    echo "$(date '+%Y-%m-%d %H:%M:%S %Z') - Loop COMPLETED with exit code ${EXIT_CODE}" >> /tmp/cron.log
    echo "===========================================" >> /tmp/cron.log
    sleep ${LOOP_INTERVAL}
  done
  
